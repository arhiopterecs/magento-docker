#!/bin/bash

source ./.env

# Creates mutagen sync session
# Availabel the next arguments:
# composer                - creates mutagen session for sync local composer home directory ${COMPOSER_HOME}
#                           with composer home directory ${DOCKER_APP_COMPOSER_HOME} in app container
# magento2ce|ce           - creates mutagen session for sync local magento2ce ${MAGENTO2CE_PATH} directory
#                           with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container 
# magento2ee|ee           - creates mutagen session for sync local magento2ee ${MAGENTO2EE_PATH} directory
#                           with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container 
# security-package|sp     - creates mutagen session for sync local security-package ${MAGENTO2_SECURITY_PATH} directory
#                           with project directory ${DOCKER_APP_MAGENTO2CE_PATH}/app/code/Magento in app container 
function create () 
{
    if [[ -z "${@}" ]]
    then
      echo Help Create command
      exit;
    fi

    SOURCES=($(printf "%s\n" "${@}" | sort -u))
    DOCKER_APP_CONTAINER=$(docker-compose -f ${LOCAL_DOCKER_COMPOSE_FILE} ps -q app|awk '{print $1}')

    for i in "${!SOURCES[@]}"; do
        case ${SOURCES[$i]} in
            composer)
                syncComposer
            ;;
            magento2ce | ce)
                syncMagento2Ce
                syncMagento2CeVendor
            ;;
            magento2ee | ee)
                syncMagento2Ee
            ;;
            security-package | sp)
                syncMagento2SecurityPackage
            ;;
            *)
                echo Unsuported Sources: ${SOURCES[$i]}
        esac
    done
}

# Creates mutagen session for sync local composer home directory ${COMPOSER_HOME}
# with composer home directory ${DOCKER_APP_COMPOSER_HOME} in app container
function syncComposer ()
{
    SOURCE=composer 

    mutagen sync terminate --label-selector=project=${PROJECT_NAME},source=${SOURCE}

    RESULT=$(mutagen sync create \
        --name=${PROJECT_NAME}-${SOURCE} \
        --label=project=${PROJECT_NAME} \
        --label=source=${SOURCE} \
        --sync-mode=two-way-resolved \
        --default-file-mode=0664 \
        --default-directory-mode=0775 \
        ${COMPOSER_HOME} docker://${DOCKER_APP_CONTAINER}${DOCKER_APP_COMPOSER_HOME})

    echo ${RESULT};
}

# Creates mutagen session for sync local magento2ce ${MAGENTO2CE_PATH} directory
# with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container
function syncMagento2Ce ()
{
    SOURCE=magento2ce

    mutagen sync terminate --label-selector=project=${PROJECT_NAME},source=${SOURCE}

    RESULT=$(mutagen sync create \
        --name=${PROJECT_NAME}-${SOURCE} \
        --label=project=${PROJECT_NAME} \
        --label=source=${SOURCE} \
        --sync-mode=two-way-resolved \
        --default-file-mode=0664 \
        --default-directory-mode=0775 \
        --symlink-mode=posix-raw \
        --ignore-vcs \
        --ignore=/vendor \
        --ignore=/var/cache \
        --ignore=/var/page_cache \
        --ignore=/var/view_preprocessed \
        --ignore=/var/composer_home \
        --ignore=/var/tmp \
        --ignore=/.idea \
        --ignore=/.magento \
        --ignore=/.docker \
        --ignore=/.github \
        --ignore=*.sql \
        --ignore=*.gz \
        --ignore=*.zip \
        --ignore=*.bz2 \
        ./${MAGENTO2CE_PATH}/ docker://${DOCKER_APP_CONTAINER}${DOCKER_APP_MAGENTO2CE_PATH})

    echo ${RESULT}
}

# Creates mutagen session for sync local magento2ce/vendor ${MAGENTO2CE_PATH}/vendor directory
# with project directory ${DOCKER_APP_MAGENTO2CE_PATH}/vendor in app container
function syncMagento2CeVendor ()
{
    SOURCE=magento2ce-vendor

    mutagen sync terminate --label-selector=project=${PROJECT_NAME},source=${SOURCE}

    RESULT=$(mutagen sync create \
        --name=${PROJECT_NAME}-${SOURCE} \
        --label=project=${PROJECT_NAME} \
        --label=source=${SOURCE} \
        --sync-mode=two-way-resolved \
        --default-file-mode=0644 \
        --default-directory-mode=0755 \
        ${MAGENTO2CE_PATH}/vendor docker://${DOCKER_APP_CONTAINER}${DOCKER_APP_MAGENTO2CE_PATH}/vendor)

    echo ${RESULT}
}

# Creates mutagen session for sync local magento2ee ${MAGENTO2EE_PATH} directory
# with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container 
function syncMagento2Ee()
{
    SOURCE=magento2ee

    mutagen sync terminate --label-selector=project=${PROJECT_NAME},source=${SOURCE}

    RESULT=$(mutagen sync create \
        --name=${PROJECT_NAME}-${SOURCE} \
        --label=project=${PROJECT_NAME} \
        --label=source=${SOURCE} \
        --sync-mode=one-way-safe \
        --default-file-mode=0664 \
        --default-directory-mode=0775 \
        --ignore=/.idea \
        --ignore=/.github \
        --ignore=*.sql \
        --ignore=*.gz \
        --ignore=*.zip \
        --ignore=*.bz2 \
        --ignore-vcs \
        ./${MAGENTO2EE_PATH}/ docker://${DOCKER_APP_CONTAINER}${DOCKER_APP_MAGENTO2CE_PATH})

    echo ${RESULT}
}

# Creates mutagen session for sync local security-package ${MAGENTO2_SECURITY_PATH} directory
# with project directory ${DOCKER_APP_MAGENTO2CE_PATH}/app/code/Magento in app container
function syncMagento2SecurityPackage ()
{

    SOURCE=security-package

    mutagen sync terminate --label-selector=project=${PROJECT_NAME},source=${SOURCE}

    RESULT=$(mutagen sync create \
        --name=${PROJECT_NAME}-${SOURCE} \
        --label=project=${PROJECT_NAME} \
        --label=source=${SOURCE} \
        --sync-mode=one-way-replica \
        --default-file-mode=0644 \
        --default-directory-mode=0755 \
        ./${MAGENTO2_SECURITY_PATH} docker://${DOCKER_APP_CONTAINER}${DOCKER_APP_MAGENTO2CE_PATH}/app/code/Magento)

    echo $RESULT
}

# Resolves sync conflicts based on the rule "alpha (sources) wins"
function conflictResolver ()
{
    SLEEP=${1:-1}

    while true
    do
        FILE_LIST=($(mutagen sync list --label-selector=project=${PROJECT_NAME} | grep alpha | awk '{print $2}'))
        
        DO_FLUSH=false

        for FILE in "${FILE_LIST[@]}"
        do                                          
            FILE_PATH=${MAGENTO2CE_PATH}/$FILE

            if [ -f "${FILE_PATH}" ]; then
                rm -rf ${FILE_PATH}
                echo Deleted: ${FILE_PATH}
                DO_FLUSH=true
            fi

        done 

        if  ${DO_FLUSH} 
        then
            mutagen sync flush --label-selector=project=${PROJECT_NAME}
        fi
        sleep ${SLEEP}
    done
}

# Shows help menu
function help()
{           
    echo 'Helper for managing the Mutagen.io syn tool'
    echo '########################################'
    echo ''
    echo 'Arguments:'
    echo 'start|sync|create      Creates mutagen sync session'
    echo '                       Availabel the next arguments:'
    echo "                       composer            - creates mutagen session for sync local composer home directory ${COMPOSER_HOME}"
    echo "                       with composer home directory ${DOCKER_APP_COMPOSER_HOME} in app container"
    echo "                       magento2ce|ce       - creates mutagen session for sync local magento2ce ${MAGENTO2CE_PATH} directory"
    echo "                       with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container"
    echo "                       magento2ee|ee       - creates mutagen session for sync local magento2ee ${MAGENTO2EE_PATH} directory"
    echo "                       with project directory ${DOCKER_APP_MAGENTO2CE_PATH} in app container"
    echo "                       security-package|sp - creates mutagen session for sync local security-package ${MAGENTO2_SECURITY_PATH} directory"
    echo "                       with project directory ${DOCKER_APP_MAGENTO2CE_PATH}/app/code/Magento in app container"
    echo 'list|monitor|flush|    Wrapper for mutagen command but only for sessions of a project session'
    echo 'pause|resume|reset|terminate' 
    echo 'resolve-conflict|rc    Resolves sync conflicts based on the rule "alpha (sources) wins"'
}

if [[ ${1} = stop ]]
then
    ACTION=terminate
else
    ACTION=${1}
fi

shift 1

case ${ACTION} in
    start|sync|create)
        create ${@}
    exit;;
    list|monitor|flush|pause|resume|reset|terminate)
        if [[ -z "${@}" ]]
        then
            mutagen sync ${ACTION} --label-selector=project=${PROJECT_NAME}
        else
            mutagen sync ${ACTION} --label-selector=project=${PROJECT_NAME},source${@}
        fi
    exit;;
    resolve-conflict|rc)
        conflictResolver ${@}
    exit;;
    *)
        help
esac

