version: '3.7'
services:
  app:
    image: duhon/php:7.4-fpm-2.4.2
    volumes:
      - ./docker-compose.yml:/var/www/magento-docker/docker-compose.yml
      - ./.env:/var/www/magento-docker/.env
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - box:/var/www:${FILE_SYNC}
    environment:
      COMPOSER_HOME: ${DOCKER_APP_COMPOSER_HOME}
    x-scenarios:
      setup:
        - composer install
        - php bin/magento setup:install --cleanup-database --db-name=${DB_NAME} --db-host=${DB_HOST} --elasticsearch-host=${ELASTIC_HOST} --backend-frontname=${BACKEND_FRONTNAME}
        #- php bin/magento setup:install --cleanup-database --db-name=${DB_NAME} --db-host=${DB_HOST} --backend-frontname=${BACKEND_FRONTNAME}
        - php bin/magento config:set web/seo/use_rewrites 1
        - php bin/magento deploy:mode:set ${MODE}
        - php bin/magento indexer:reindex
        #- php bin/magento cache:clean  
        - php bin/magento admin:user:create --admin-user=${ADMIN_USER} --admin-password=${ADMIN_PASSWORD} --admin-email=${ADMIN_EMAIL} --admin-firstname=${ADMIN_FIRSTNAME} --admin-lastname=${ADMIN_LASTNAME}
      uninstall:
        - php bin/magento setup:uninstall
  web:
    image: nginx:alpine
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
      - box:/var/www:${FILE_SYNC}
      - ${PATH_TO_CRT_PUBLIC}:/etc/nginx/server.crt
      - ${PATH_TO_CRT_PRIVATE}:/etc/nginx/server.key
    ports:
      - ${WEB_PORT}:80
      - ${WEBS_PORT}:443
  db:
    image: mariadb:10.4
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - ${DB_PORT}:3306
  elastic:
    image: elasticsearch:7.1.0
    ports:
      - ${ELASTIC_PORT}:9200
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    x-hits:
      - curl -i http://localhost:9200/_cluster/health
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/elasticsearch/es-overview.html
    x-scenarios:
      setup:
        - php bin/magento config:set catalog/search/engine elasticsearch7
        - php bin/magento cache:clean
  mail:
    image: mailhog/mailhog
    expose:
      - 1025
      - 8025
    ports:
      - ${MAIL_PORT}:8025
  redis-master:
    image: redis
    expose:
      - "6379"
    ports:
      - ${REDIS_PORT}:6379
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    x-hints:
      - redis-cli monitor
      - telnet localhost 6379
    x-scenarios:
      setup:
        - php bin/magento setup:config:set --session-save=redis --session-save-redis-host=redis-master --session-save-redis-db=0 -q
        - php bin/magento setup:config:set --cache-backend=redis --cache-backend-redis-server=redis-master --cache-backend-redis-db=1 -q
        - php bin/magento setup:config:set --page-cache=redis --page-cache-redis-server=redis-master --page-cache-redis-db=2 -q
        - php bin/magento cache:clean
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/redis/config-redis.html
  redis-stat:
    image: insready/redis-stat
    depends_on:
      - redis-master
    expose:
      - 63790
    ports:
      - ${REDIS_STAT_PORT}:63790
    command: '--server redis-master'      
volumes:
  box: { }
networks:
  default:
    driver: bridge
